[project]
name = "rag-server"
version = "0.1.0"
description = "RAG Server with Vector Database - A comprehensive RAG system with Milvus vector database, multi-LLM support, and fine-grained access control"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "RAG Server Team", email = "team@ragserver.com"}
]
keywords = ["rag", "vector-database", "llm", "milvus", "langchain"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-openai>=0.0.5",
    "langchain-google-genai>=0.0.5",
    "google-genai>=0.3.0",
    "langchain-anthropic>=0.1.0",
    "pymilvus>=2.3.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "pymysql>=1.1.0",
    "psycopg2-binary>=2.9.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.0",
    "python-docx>=1.1.0",
    "openpyxl>=3.1.0",
    "pypdf>=3.17.0",
    "sentence-transformers>=2.2.0",
    "tiktoken>=0.5.0",
    "pyyaml>=6.0.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "loguru>=0.7.0",
    "httpx>=0.25.0",
    "ollama>=0.1.0",
    "psutil>=7.0.0",
    "python-dotenv>=1.1.1",
    # Web UI dependencies
    "streamlit>=1.28.0",
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    "requests>=2.31.0",
    "plotly>=5.15.0",
    "pandas>=2.0.0",
    "streamlit-option-menu>=0.3.6",
    "streamlit-authenticator>=0.2.3",
    "Pillow>=10.0.0",
    "python-dateutil>=2.8.2",
    "openai>=1.97.0",
    "chardet>=5.2.0",
    "spacy>=3.7.0",
    "nltk>=3.8.0",
    "scikit-learn>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
]
db-oracle = ["cx-oracle>=8.3.0"]
db-mssql = ["pyodbc>=5.0.0"]
db-mariadb = ["mariadb>=1.1.0"]
all-db = ["cx-oracle>=8.3.0", "pyodbc>=5.0.0", "mariadb>=1.1.0"]

[project.scripts]
rag-server = "main:main"
rag-cli = "src.cli.main:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=html --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[dependency-groups]
dev = [
    "pip>=25.1.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]
